@model u21632660_HW03.Models.LibraryVM
@using PagedList.Mvc;
@{
    ViewBag.Title = "Home Page";
    var students = Model.Students;
    var books = Model.Books;
    var types = Model.BookTypes;
    var borrows = Model.Borrows;
    var authors = Model.Authors;
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h4>Home</h4>
<hr />
<div class="row">
    <div class="col-sm-6">
        <div class="row">
            <div class="col-sm-6"><h5>Students</h5></div>
            <div class="col-sm-6"><button type="button" class="btn btn-sm btn-outline-success float-right" data-target="#createStudent" data-toggle="modal">Create</button></div>
        </div>

        <table class="table table-sm table-striped" style="font-size: 13px;">
            <thead class="bg-primary text-light">
                <tr>
                    <th>Name</th>
                    <th>Surame</th>
                    <th>Birthdate</th>
                    <th>Gender</th>
                    <th>Class</th>
                    <th>Points</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in students)
                {
                    <tr>
                        <td>@student.name</td>
                        <td>@student.surname</td>
                        <td>@student.birthdate</td>
                        <td>@student.gender</td>
                        <td>@student.classes</td>
                        <td>@student.point</td>
                    </tr>
                }
            </tbody>
        </table>
        Page @(Model.Students.PageCount < Model.Students.PageNumber ? 0 : Model.Students.PageNumber) of @Model.Books.PageCount

        @Html.PagedListPager(Model.Students, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>

    <div class="col-sm-6">
        <div class="row">
            <div class="col-sm-6"><h5>Books</h5></div>
            <div class="col-sm-6"><button type="button" class="btn btn-sm btn-outline-success float-right" data-target="#createBook" data-toggle="modal">Create</button></div>
        </div>
        <table class="table table-sm table-striped" style="font-size: 13px;">
            <thead class="bg-primary text-light">
                <tr>
                    <th>Name</th>
                    <th>Pages</th>
                    <th>Point</th>
                    <th>Author</th>
                    <th>Type</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in books)
                {
                    var borrowedBook = borrows.Where(br => br.bookId == book.bookId && br.broughtDate == null).ToList();
                    <tr>
                        <td>@book.name</td>
                        <td>@book.pagecount</td>
                        <td>@book.point</td>
                        @foreach (var auth in authors.Where(a => a.authorId == book.authorId))
                        {
                            <td> @auth.name  @auth.surname</td>
                        }
                        @foreach (var type in types.Where(t => t.typeId == book.typeId))
                        {
                            <td> @type.name</td>
                        }
                         
                        @if(borrowedBook == null) 
                        { 
                            <td style="color: green">Available</td>
                        }
                        else
                        {
                            <td style="color: red">Out</td>
                        }
                        
                    </tr>
                }
            </tbody>
        </table>
        Page @(Model.Books.PageCount < Model.Books.PageNumber ? 0 : Model.Books.PageNumber) of @Model.Books.PageCount
        @Html.PagedListPager(Model.Books, pagebook => Url.Action("Index", new { pagebook, sortOrderbooks = ViewBag.SortOrderBooks, currentFilterbooks = ViewBag.CurrentFilterbooks }))
    </div>
</div>

<!--Create Student Modal -->
<div class="modal fade" id="createStudent" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="studentModalLongTitle">Create Student</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("CreatStudent", "Home", FormMethod.Post))
            {
                <div class="modal-body">
                    <h5>Stundent details</h5>

                    <div class="form-group">
                        <label for="">Name</label>
                        <input type="text" class="form-control form-control-sm" name="name" placeholder="Name..." required />
                    </div>
                    <div class="form-group">
                        <label for="">Surname</label>
                        <input type="text" class="form-control form-control-sm" name="surname" placeholder="Surname..." required />
                    </div>
                    <div class="form-group">
                        <label for="">Birth-Date</label>
                        <input type="date" max="2013-01-01" class="form-control form-control-sm" name="birthdate" required />
                    </div>
                    <div class="form-group">
                        <label for="">Class</label>
                        <input type="text" class="form-control form-control-sm" onkeypress="this.value = this.value.toUpperCase()" name="stuClass" placeholder="Class..." required />
                    </div>
                    <div>
                        <label for="">Gender</label>
                        <select class="form-control form-control-sm" name="gender">
                            <option value="F">Female</option>
                            <option value="M">Male</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="">Point</label>
                        <input type="number" min="0" class="form-control form-control-sm" name="point" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-danger" onclick="" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-sm btn-success">Create</button>
                </div>
            }
        </div>
    </div>
</div>

<!--Creat Book Modal -->
<div class="modal fade" id="createBook" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookModalLongTitle">Create Book</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("CreatBook", "Home", FormMethod.Post))
            {
                <div class="modal-body">
                    <h5>Stundent details</h5>

                    <div class="form-group">
                        <label for="">Book Name</label>
                        <input type="text" class="form-control form-control-sm" name="name" placeholder="Name..." required />
                    </div>
                    <div class="form-group">
                        <label for="">Page Count</label>
                        <input type="number" min="0" class="form-control form-control-sm" name="pagecount" placeholder="pages..." required />
                    </div>
                    <div class="form-group">
                        <label for="">Points</label>
                        <input type="number" min="0" class="form-control form-control-sm" name="points" placeholder="Points..." required />
                    </div>
                    <div>
                        <label for="">Author</label>
                        <select class="form-control form-control-sm" name="author">
                            @foreach(var auth in authors)
                            { 
                                <option value="@auth.authorId">@auth.name @auth.name</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label for="">Book Type</label>
                        <select class="form-control form-control-sm" name="bookType">
                            @foreach (var type in types)
                            {
                                <option value="@type.typeId">@type.name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-danger" onclick="" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-sm btn-success">Create</button>
                </div>
            }
        </div>
    </div>
</div>