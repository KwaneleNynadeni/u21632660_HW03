@model u21632660_HW03.Models.LibraryVM
@using PagedList.Mvc;
@{
    ViewBag.Title = "Maintain";
    var students = Model.StudentsList;
    var books = Model.BooksList;
    var types = Model.BookTypes;
    var borrows = Model.Borrows;
    var authors = Model.Authors;
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h2>Maintain</h2>

<div class="row">
    <div class="col-sm-6">
        <div class="row">
            <div class="col-sm-6"><h5>Authors</h5></div>
            <div class="col-sm-6"><button type="button" class="btn btn-sm btn-outline-success float-right" data-target="#createAuthor" data-toggle="modal">Create</button></div>
        </div>
        <table class="table table-sm table-striped" style="font-size: 13px;">
            <thead class="bg-primary text-light">
                <tr>
                    <th>Name</th>
                    <th>Surname</th>
                    <th>Options</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var author in authors)
                {
                    <tr>
                        <td>@author.name</td>
                        <td>@author.surname</td>
                        <td>
                            <button type="button" class="btn btn-sm btn-primary" name="/Library/AuthorEditor?authorId=@author.authorId" onclick="editDel(this.name)">Edit</button>
                            <button type="button" class="btn btn-sm btn-danger" name="/Library/AuthorDeleter?authorId=@author.authorId" onclick="editDel(this.name)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        Page @(Model.Authors.PageCount < Model.Authors.PageNumber ? 0 : Model.Authors.PageNumber) of @Model.Authors.PageCount
        @Html.PagedListPager(Model.Authors, page => Url.Action("Maintain", new { page, pageAuthors = page }))
    </div>
    <div class="col-sm-6">
        <div class="row">
            <div class="col-sm-6"><h5>Types</h5></div>
            <div class="col-sm-6"><button type="button" class="btn btn-sm btn-outline-success float-right" data-target="#createType" data-toggle="modal">Create</button></div>
        </div>
        <table class="table table-sm table-striped" style="font-size: 13px;">
            <thead class="bg-primary text-light">
                <tr>
                    <th>Name</th>
                    <th>Options</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var type in types)
                {
                    <tr>
                        <td>@type.name</td>
                        <td>
                            <button type="button" class="btn btn-sm btn-primary" name="/Library/TypeEditor?typeId=@type.typeId" onclick="editDel(this.name)">Edit</button>
                            <button type="button" class="btn btn-sm btn-danger" name="/Library/TypeDeleter?typeId=@type.typeId" onclick="editDel(this.name)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        Page @(Model.BookTypes.PageCount < Model.BookTypes.PageNumber ? 0 : Model.BookTypes.PageNumber) of @Model.BookTypes.PageCount
        @Html.PagedListPager(Model.BookTypes, page => Url.Action("Maintain", new { page, pageTypes = page }))
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="row">
            <div class="col-sm-6"><h5>Borrows</h5></div>
            <div class="col-sm-6"><button type="button" class="btn btn-sm btn-outline-success float-right" data-target="#createBorrow" data-toggle="modal">Create</button></div>
        </div>
        <table class="table table-sm table-striped" style="font-size: 13px;">
            <thead class="bg-primary text-light">
                <tr>
                    <th>Student</th>
                    <th>Book name</th>
                    <th>Date out</th>
                    <th>Date In</th>
                    <th>Options</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var borrow in borrows)
                {
                    <tr>
                        @foreach (var stu in students.Where(stud => stud.studentId == borrow.studentId))
                        {
                            <td>@stu.name @stu.surname</td>
                        }
                        @foreach (var book in books.Where(bk => bk.bookId == borrow.bookId))
                        {
                            <td>@book.name </td>
                        }
                        <td>@borrow.takenDate</td>
                        @if (borrow.broughtDate != null)
                        {
                            <td>@borrow.broughtDate</td>
                        }
                        else
                        {
                            <td style="color: red">Not Returned</td>
                        }
                        <td>
                            <button type="button" class="btn btn-sm btn-primary" name="/Library/BorrowEditor?borrowId=@borrow.borrowId" onclick="editDel(this.name)">Edit</button>
                            <button type="button" class="btn btn-sm btn-danger" name="/Library/BorrowDeleter?borrowId=@borrow.borrowId" onclick="editDel(this.name)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        Page @(Model.Borrows.PageCount < Model.Borrows.PageNumber ? 0 : Model.Borrows.PageNumber) of @Model.Borrows.PageCount
        @Html.PagedListPager(Model.Borrows, page => Url.Action("Maintain", new { page, pageBorrows = page }))
    </div>
</div>

<!--Create author Modal -->
<div class="modal fade" id="createAuthor" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="authorModalLongTitle">Create Author</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("CreatAuthor", "Home", FormMethod.Post))
            {
                <div class="modal-body">
                    <h5>Author details</h5>

                    <div class="form-group">
                        <label for="">Name</label>
                        <input type="text" class="form-control form-control-sm" name="name" placeholder="Name..." required />
                    </div>
                    <div class="form-group">
                        <label for="">Surname</label>
                        <input type="text" class="form-control form-control-sm" name="surname" placeholder="Surname..." required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-danger" onclick="" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-sm btn-success">Create</button>
                </div>
            }
        </div>
    </div>
</div>
<!--Create type Modal -->
<div class="modal fade" id="createType" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="typeModalLongTitle">Create Type</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("CreatType", "Home", FormMethod.Post))
            {
                <div class="modal-body">
                    <h5>Type details</h5>

                    <div class="form-group">
                        <label for="">Type Name</label>
                        <input type="text" class="form-control form-control-sm" name="name" placeholder="Name..." required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-danger" onclick="" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-sm btn-success">Create</button>
                </div>
            }
        </div>
    </div>
</div>

<!--Create Borrow Modal -->
<div class="modal fade" id="createBorrow" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="borrowModalLongTitle">Create Borrow</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("CreatBorrow", "Home", FormMethod.Post))
            {
                <div class="modal-body">
                    <h5>Borrow details</h5>
                    <div>
                        <label for="student">Student</label>
                        <select class="form-control form-control-sm" name="mystudent" id="student">
                            @foreach (var student in students)
                            {
                                <option value="@student.studentId">@student.name @student.surname</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label for="book">Book</label>
                        <select class="form-control form-control-sm" name="mybook" id="book">
                            @foreach (var book in books)
                            {
                                <option value="@book.bookId">@book.name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-danger" onclick="" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-sm btn-success">Create</button>
                </div>
            }
        </div>
    </div>
</div>

<!--Create author Modal -->
<div class="modal fade" id="editDelModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="authorModalLongTitle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="editDelBody">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>        
        </div>
    </div>
</div>

<script type="text/javascript">

    function editDel(myurl) {
        $('#editDelModal').on('show.bs.modal', function (e) {
            var target = $(e.relatedTarget);
            var url = target.data('url');
            $("#editDelBody").load(myurl);
        });
        $('#editDelModal').modal("show");
    }
</script>